{% form_theme form 'form/tw_theme.html.twig' %}

{{ form_start(form, { attr: { class: 'space-y-12', novalidate: 'novalidate' } }) }}

{# ==================== QUOTE (infos générales) ==================== #}
<div class="border-b border-gray-900/10 pb-12 dark:border-white/10">
    <h2 class="text-base/7 font-semibold text-gray-900 dark:text-white">Quote</h2>
    <p class="mt-1 text-sm/6 text-gray-600 dark:text-gray-400">Informations générales du devis.</p>

    <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
        {{ form_row(form.number, { row_attr: { class: 'sm:col-span-2' } }) }}
        {{ form_row(form.title, { row_attr: { class: 'sm:col-span-4' } }) }}
        {{ form_row(form.customer, { row_attr: { class: 'sm:col-span-3' } }) }}
        {{ form_row(form.owner, { row_attr: { class: 'sm:col-span-3' }, label: 'Owner (issuer)' }) }}
        {{ form_row(form.issueDate,{ row_attr: { class: 'sm:col-span-3' } }) }}
        {{ form_row(form.validUntil,{ row_attr: { class: 'sm:col-span-3' } }) }}
        {{ form_row(form.status, { row_attr: { class: 'sm:col-span-2' } }) }}
    </div>
</div>

{# ==================== PRODUCTS (collection) ==================== #}
<div class="border-b border-gray-900/10 pb-12 dark:border-white/10">
    <div class="flex items-center justify-between">
        <div>
            <h2 class="text-base/7 font-semibold text-gray-900 dark:text-white">Products</h2>
            <p class="mt-1 text-sm/6 text-gray-600 dark:text-gray-400">
                Ajoutez les lignes (intitulé, quantité, prix unitaire HT, TVA).
            </p>
        </div>
        <button type="button" id="add-item" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm
             hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2
             focus-visible:outline-offset-2 focus-visible:outline-indigo-600
             dark:bg-indigo-500 dark:shadow-none dark:focus-visible:outline-indigo-500">
            + Add product
        </button>
    </div>

    {# --- Prototype personnalisé qui respecte la grille --- #}
    {% set itemPrototype %}
    <div class="item rounded-2xl border border-gray-200 dark:border-white/10 p-4">
        <div class="grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-12">
            <div class="sm:col-span-6">
                {{ form_row(form.items.vars.prototype.title) }}
            </div>
            <div class="sm:col-span-2">
                {{ form_row(form.items.vars.prototype.quantity) }}
            </div>
            <div class="sm:col-span-2">
                {{ form_row(form.items.vars.prototype.unitPrice) }}
            </div>
            <div class="sm:col-span-2">
                {{ form_row(form.items.vars.prototype.taxRate) }}
            </div>
        </div>

        <div class="mt-3 flex justify-end">
            <button type="button" class="remove-item rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold text-white shadow-sm
                         hover:bg-red-500 focus-visible:outline focus-visible:outline-2
                         focus-visible:outline-offset-2 focus-visible:outline-red-600
                         dark:bg-red-500 dark:shadow-none dark:focus-visible:outline-red-500">
                Remove
            </button>
        </div>
    </div>
    {% endset %}

    {# Wrapper de la collection avec le prototype personnalisé #}
    <div id="items-wrapper" class="mt-6 space-y-4" data-index="{{ form.items|length }}"
        data-prototype="{{ itemPrototype|e('html_attr') }}">
        {# Lignes existantes #}
        {% for itemForm in form.items %}
        <div class="item rounded-2xl border border-gray-200 dark:border-white/10 p-4">
            <div class="grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-12">
                <div class="sm:col-span-6">
                    {{ form_row(itemForm.title) }}
                </div>
                <div class="sm:col-span-2">
                    {{ form_row(itemForm.quantity) }}
                </div>
                <div class="sm:col-span-2">
                    {{ form_row(itemForm.unitPrice) }}
                </div>
                <div class="sm:col-span-2">
                    {{ form_row(itemForm.taxRate) }}
                </div>
            </div>

            <div class="mt-3 flex justify-end">
                <button type="button" class="remove-item rounded-md bg-red-600 px-3 py-1.5 text-sm font-semibold text-white shadow-sm
                             hover:bg-red-500 focus-visible:outline focus-visible:outline-2
                             focus-visible:outline-offset-2 focus-visible:outline-red-600
                             dark:bg-red-500 dark:shadow-none dark:focus-visible:outline-red-500">
                    Remove
                </button>
            </div>
        </div>
        {% endfor %}
    </div>
</div>

{# ==================== TOTALS ==================== #}
<div class="border-b border-gray-900/10 pb-12 dark:border-white/10">
    <h2 class="text-base/7 font-semibold text-gray-900 dark:text-white">Totals</h2>
    <p class="mt-1 text-sm/6 text-gray-600 dark:text-gray-400">
        Saisissez les montants ou laissez-les vides si calculés ailleurs.
    </p>

    <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
        {{ form_row(form.subTotal, { row_attr: { class: 'sm:col-span-2' } }) }}
        {{ form_row(form.taxTotal, { row_attr: { class: 'sm:col-span-2' } }) }}
        {{ form_row(form.total, { row_attr: { class: 'sm:col-span-2' } }) }}
    </div>
</div>

{# Rendre le reste (hidden fields, CSRF) #}
{{ form_rest(form) }}

<div class="mt-6 flex items-center justify-end gap-x-6">
    <a href="{{ path('quote_index') }}" class="text-sm/6 font-semibold text-gray-900 dark:text-white">Cancel</a>
    <button type="submit" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm
           hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2
           focus-visible:outline-offset-2 focus-visible:outline-indigo-600
           dark:bg-indigo-500 dark:shadow-none dark:focus-visible:outline-indigo-500">
        {{ button_label|default('Save') }}
    </button>
</div>

{{ form_end(form, { render_rest: false }) }}

{# ==================== JS: gestion de la Collection ==================== #}
<script>
    (function () {
        let initialized = false;

        function initQuoteItems() {
            if (initialized) return;

            const wrapper = document.getElementById('items-wrapper');
            const addBtn = document.getElementById('add-item');
            if (!wrapper || !addBtn) return;

            let index = Number(wrapper.dataset.index || wrapper.querySelectorAll('.item').length || 0);

            function addItem() {
                const protoHtml = wrapper.dataset.prototype.replace(/__name__/g, String(index));
                index++;
                wrapper.dataset.index = String(index);

                // Insérer le bloc .item généré par le prototype personnalisé
                const tmp = document.createElement('div');
                tmp.innerHTML = protoHtml.trim();
                const item = tmp.firstElementChild;
                wrapper.appendChild(item);
            }

            addBtn.addEventListener('click', addItem);

            // suppression via délégation d'événements
            wrapper.addEventListener('click', function (e) {
                const btn = e.target.closest('.remove-item');
                if (!btn) return;
                e.preventDefault();
                const item = btn.closest('.item');
                if (item) item.remove();
            });

            initialized = true;
        }

        document.addEventListener('DOMContentLoaded', initQuoteItems);
        document.addEventListener('turbo:load', initQuoteItems);
        // document.addEventListener('turbo:frame-load', initQuoteItems);
    })();
</script>